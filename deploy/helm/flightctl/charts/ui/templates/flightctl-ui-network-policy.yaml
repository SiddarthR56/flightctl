{{ if and (not (eq .Values.global.target "acm")) (eq (include "flightctl.getServiceExposeMethod" .) "route") }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ui-from-router
  namespace: {{ .Release.Namespace }}
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          policy-group.network.openshift.io/ingress: ""
      podSelector: {}
  podSelector:
    matchLabels:
      role: frontend
  policyTypes:
  - Ingress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-api-from-ui
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      flightctl.service: flightctl-api
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: flightctl-ui
  policyTypes:
    - Ingress
{{ end }}