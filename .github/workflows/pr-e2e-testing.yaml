name: "E2E testing"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  e2e:
    runs-on: "ubuntu-24.04"
    environment: private-images
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            notdocs:
              - '!.spelling'
              - '!README.md'
              - '!docs/**'

      - name: Free Disk Space (Ubuntu)
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false

      - name: Setup all dependencies
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        uses: ./.github/actions/setup-dependencies
        with:
          setup_kvm: yes

      - name: Setup registry.redhat.io auth
        if: ${{ steps.filter.outputs.notdocs == 'true' && matrix.config == 'private-images' }}
        run: |
          if [ -z "${{ secrets.DOCKER_CONFIG_JSON }}" ]; then
            echo "Docker config.json is not available."
            exit 0
          fi
          mkdir -p ~/.docker
          echo "${{ secrets.DOCKER_CONFIG_JSON }}" > ~/.docker/config.json
          chmod 600 ~/.docker/config.json

      - name: Create kind cluster
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        run: make cluster

      - name: Setup pull secret
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        run: |
          if [ -z "${{ secrets.PULL_SECRET }}" ]; then
            echo "Pull secret is not available."
            exit 0
          fi
          echo "${{ secrets.PULL_SECRET }}" > /tmp/pull-secret.txt
          chmod 600 /tmp/pull-secret.txt

      - name: Deploy the flightctl server
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        env:
          IMAGE_PULL_SECRET_PATH: /tmp/pull-secret.txt
          SQL_IMAGE: registry.redhat.io/rhel8/postgresql-12
          SQL_VERSION: 1-181
          KV_IMAGE: registry.redhat.io/rhel9/redis-7
          KV_VERSION: "9.5"
        run: make deploy

      - name: Cleanup pull secret
        if: always() && steps.filter.outputs.notdocs == 'true'
        run: |
          # Ensure pull secret is securely removed
          if [ -f /tmp/pull-secret.txt ]; then
            shred -u /tmp/pull-secret.txt
          fi
          # Cleanup podman login credentials
          podman logout registry.redhat.io || true

      - name: Deploy the E2E side services, registry and git
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        run: make deploy-e2e-extras

      - name: Make rpm, and agent images
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        run: |
          make e2e-agent-images

      - name: Make sure the images are owned by the runner user
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        run: |
          sudo chown -R runner:runner bin/output|| true

      - name: Run E2E Tests
        if: ${{ steps.filter.outputs.notdocs == 'true' }}
        run:  make run-e2e-test VERBOSE=true # use DEBUG_VM_CONSOLE=1 to see the VM console output

      - name: Collect and Upload Logs
        if: always() && steps.filter.outputs.notdocs == 'true'
        uses: ./.github/actions/collect-logs
        with:
          namespace-external: 'flightctl-external'
          namespace-internal: 'flightctl-internal'
          log-directory: 'logs'
